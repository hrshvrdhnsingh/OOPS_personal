package com.harsh.demo1.ObjectDemo;
/*Demonstration of Object Classes */
public class Demo {
    int num; 

    public Demo(int num) {
        this.num = num;
    }

    @Override
    protected Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    //finalize() method of the Object class that is used to perform cleanup 
    //activity before destroying any object.It is called by Garbage collector 
    //before destroying the objects from memory. finalize() method is called by 
    //default for every object before its deletion.
    @Override
    protected void finalize() throws Throwable {
        super.finalize();
    }
    
    //Hashcode is a unique code generated by the JVM at time of object creation. 
    //It can be used to perform some operation on hashing related algorithms like hashtable, hashmap etc.
    @Override
    public int hashCode() {
        return super.hashCode();
    }

    //If you print any object, Java compiler internally invokes the toString() 
    //method on the object. It can be overriden to get the desired result.
    @Override
    public String toString() {
        return super.toString();
    }

    //comparison of the contents of the objects being comapred.
    @Override
    public boolean equals(Object obj) {
        return super.equals(obj);
    }

    //instanceOf method check whether the object is an instance of the specified 
    //type (class or subclass or interface).

    //getClass returns the class to which the object belongs.This method can't be overwritten.
    
    public static void main(String[] args) {
        
        Demo ob = new Demo(10);
        System.out.println(ob.hashCode());//Generates the hash value of the object ob.
        Demo ob1 = new Demo(10);
        System.out.println(ob.equals(ob1));

        System.out.println(ob instanceof Demo);

        System.out.println(ob.getClass());
        System.out.println(ob1.getClass());
    }
}
